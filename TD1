EXERCICE 2 :
1)
# let poly (a,b,c) x= a*.x*.x +. b*.x +. c;;
val poly : float * float * float -> float -> float = <fun>

# poly (1.0,2.0,3.0) 4.0;;
- : float = 27.


2)
# let p1 = poly(2.,-1.,3.);;
val p1 : float -> float = <fun>

# let p2 = poly(-1.,0.,12.);;
val p2 : float -> float = <fun>


EXERCICE 3 :
1)
# let max (a,b) = (a+b+abs(a-b))/2;;
val max : int * int -> int = <fun>
# max(10,30);;
- : int = 30


2)
# let min (a,b) = (a+b-abs(a-b))/2;;
val max : int * int -> int = <fun>
# max(10,30);;
- : int = 10


EXERCICE 4 :
let rec pgcd (x,y) = (max(x,y) % min(x,y)) match (y,max(x,y)%min(x,y)) with (max(x,y) % min(x,y)) -> 0;;

let rec pgcd (x,y) = if (max(x,y) - min(x,y) = 0) then x else pgcd(max(x,y)/min(x,y),min(a,b));;

